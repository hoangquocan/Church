datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedIndexes"]
  binaryTargets   = "native"
}

model User {
  id    Int     @id @default(autoincrement())
  name  String?
  email String  @unique
  roles String  @default("user")
}

model Member {
  id          Int          @id @default(autoincrement()) @db.UnsignedInt
  name        String
  birthDate   DateTime     @db.Date()
  phoneNumber String       @db.VarChar(20)
  email       String
  address     String
  group       Group?       @relation(fields: [groupId], references: [id])
  groupId     Int?         @db.UnsignedInt
  attendance  Attendance[]
  createdAt   DateTime     @default(now())

  @@index([createdAt(sort: Desc)])
}

model Group {
  id         Int        @id @default(autoincrement()) @db.UnsignedInt
  name       String     @unique(sort: Asc)
  members    Member[]
  leader     String
  activities Activity[]
  createdAt  DateTime   @default(now())
}

model Activity {
  id         Int          @id @default(autoincrement()) @db.UnsignedInt
  name       String
  date       DateTime     @db.Date
  group      Group        @relation(fields: [groupId], references: [id])
  groupId    Int          @db.UnsignedInt()
  attendance Attendance[]
  createdAt  DateTime     @default(now())
}

model Attendance {
  id          Int      @id @default(autoincrement())
  activity    Activity @relation(fields: [activityId], references: [id])
  activityId  Int      @db.UnsignedInt
  member      Member   @relation(fields: [memberId], references: [id])
  memberId    Int      @db.UnsignedInt
  present     Boolean  @db.Bit(1)
  submittedBy String?
  createdAt   DateTime @default(now())
}
